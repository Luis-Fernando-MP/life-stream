@use '@sass/utils/scrollbar';
@use '@sass/config/vars' as *;
@use '@sass/utils/media' as m;
@use '@sass/utils/text' as t;
@use '@sass/utils/loader' as loader;

*,
::before,
::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: none;

  outline: none;
}

body {
  @extend %scroll-hidden;

  position: relative;

  overflow: hidden;

  width: 100dvw;
  height: 100dvh;
  min-height: 100dvh;
  max-height: 100dvh;

  font-family: $font1;
  font-size: $family-size;
  color: rgb($fn1);

  background-color: rgb($bg1);

  textarea {
    @extend %scroll-hidden;

    resize: none;
  }

  button {
    cursor: pointer;

    width: fit-content;
    height: fit-content;
    margin: none;

    background-color: $bg2;

    @include hoverS;
  }

  input,
  textarea,
  button,
  select,
  p {
    font-size: $fP;
  }

  p,
  a,
  span,
  small,
  input,
  textarea,
  button,
  select {
    color: rgb($fn2);
    text-wrap: pretty;
  }

  a {
    display: block;
    text-decoration: none;
  }

  span {
    font-family: $font3;
    font-weight: 400;
    color: rgb($fn2);
  }

  h5 {
    font-weight: 500;
    color: rgb($fn1);
    text-wrap: balance;
  }

  p {
    font-weight: normal;
  }

  h5,
  p,
  a,
  input,
  textarea,
  button,
  select {
    font-family: $font2;

    &:focus {
      outline: none;
    }
  }
}

$listOfFontsSize: (
  '.xl': $fXl,
  'h1': $fH1,
  'h2': $fH2,
  'h3': $fH3,
  'h4': $fH4,
  'h5': $fH5,
  'p': $fP,
  'span': $fSpan
);

@each $tag, $value in $listOfFontsSize {
  #{$tag} {
    font-size: $value;
  }
}

h1,
h2,
h3,
h4 {
  font-family: $font1;
  color: rgb($fn1);
  text-wrap: balance;
}

h1,
h2,
h3 {
  color: rgb($fn1);
}

h1 {
  font-weight: 900;
}

h2 {
  font-weight: 800;
}

h3 {
  font-weight: 700;
}

h4 {
  font-weight: 600;
  color: rgb($fn2);
}

ul {
  list-style: none;
}

svg {
  display: block;
  width: 1.5em;
  height: 1.5em;
  font-size: $family-size;
}

.tn1 {
  color: rgb($tn1);
}

@include m.smallerScreen {
  body {
    font-size: 10px;
  }
}

::selection {
  color: rgb($fn1);
  background-color: rgb($tn1);
}

.skeleton {
  display: block;
  min-width: 35px;
  min-height: 35px;
  background-color: #f6f4ff;

  &.radius {
    border-radius: $radius;
  }

  &,
  &-co {
    animation: bounce 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  &-co {
    background-color: #efeaff;
  }

  @keyframes bounce {
    50% {
      opacity: 0.5;
    }
  }
}

.delay {
  animation-delay: 700ms;
}

.box-error {
  border-color: $error !important;
  background-color: rgba($error, 0.2) !important;
}

.logo {
  fill: rgb($tn1);
}

.lucide {
  width: $icon;
  height: $icon;
  stroke: rgb($fn2);
  stroke-width: 1.7;
}

.loading {
  @include loader.loader;
}
